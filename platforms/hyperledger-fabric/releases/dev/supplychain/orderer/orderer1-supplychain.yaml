apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/vmeng/blockchain-automation-framework.git
    ref: local
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.0
        alpineutils: hyperledgerlabs/alpine-utils:1.0

    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: kafka

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.1.207:8200
      role: vault-role
      authpath: supplychain-net-auth
      secretprefix: secret/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth
    kafka:
      readinesscheckinterval: 10
      readinessthreshold: 10
      brokers:
      - kafka-0.broker.supplychain-net.svc.cluster.local:9092
      - kafka-1.broker.supplychain-net.svc.cluster.local:9092
      - kafka-2.broker.supplychain-net.svc.cluster.local:9092

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIGSld9ceKXr6orX/vbKW/+KajVmeatViGA9lMRqKZ7IhErdZCrRZCrFZCngKWggBEAEaBgi/24eCBiIKc3lzY2hhbm5lbCpANmZjMGZhOGNkMGE5YTFjYzRjY2RlNGZhYmU5NGQ0OTYyNTQ4YzcyMDg0MDI5Y2I2OTBlOWExZDY0MDk4MDIzNhIaEhgUbF2oV80Tap1NPEBmaVFtgvIpf1Y7u5EStFgKsVgSrlgS2BoKB09yZGVyZXISzBoSthYKDnN1cHBseWNoYWluTVNQEqMWGq8UCgNNU1ASpxQSnBQSmRQKDnN1cHBseWNoYWluTVNQEuUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5akNDQVp1Z0F3SUJBZ0lKQVB1QjluK0lLaFhXTUFvR0NDcUdTTTQ5QkFNQ01GNHhDekFKQmdOVkJBWVQKQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SApUM0prWlhKbGNqRWJNQmtHQTFVRUF3d1NZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjBNQjRYRFRJeE1ETXdOVEE0Ck16RTFNbG9YRFRJek1USXlOREE0TXpFMU1sb3dYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHYKYm1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlEVlFRRApEQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVRWClRaYnJnSDlDTUxvbXJacUp6RU9oOTNJQ1kwZ1JkSVMxaFJhOTlVRWtOUFVXaWZVdUNOeXVYVFNUUW5ubFpGME0KQWx1VjlWWDdlREdDVE5Qako4VnZvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCL3dRRQpBd0lCcGpBZEJnTlZIUTRFRmdRVXN2NU1xb2lzV3lFQVZNTFJrNmkxOENoUFd5OHdDZ1lJS29aSXpqMEVBd0lEClNRQXdSZ0loQUxpRFg2a0FkVjNENi9yd0ZSeGx4WFJETTJkd09hdEIrWmlGcGRwU0tlVGpBaUVBbkg2ZmtTUXEKRlBtWUl3RXhqTk93M0RPS1gwMU1nRUR1WU1RbHlpMG03UzA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIqYILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM0ekNDQW9xZ0F3SUJBZ0lVWFo0NlZqcXVYSS9xanhjMmtudHdPUjEzTTg4d0NnWUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3CkhoY05NakV3TXpBMU1EZ3pNVEF3V2hjTk1qSXdNekExTURnek5qQXdXakJ0TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVE4dwpEUVlEVlFRTEV3WmpiR2xsYm5ReEhqQWNCZ05WQkFNTUZVRmtiV2x1UUhOMWNIQnNlV05vWVdsdUxXNWxkREJaCk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQk9zeTBlMEl3OEpxYmpPdDVjVm9RQk5jVi96V20wME0KM1ZrMTJNUis0L1RFUTJsNVVxQzMzcEFuMm5ZQnRUUUMwWGpFb2JjZ0NaSUFvNkFkcm9UejZraWpnZ0VWTUlJQgpFVEFPQmdOVkhROEJBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVXdsbjlZRWd4CjBqNTlEZm0rVjVtc0VoTE9VOUl3SHdZRFZSMGpCQmd3Rm9BVXN2NU1xb2lzV3lFQVZNTFJrNmkxOENoUFd5OHcKSkFZRFZSMFJCQjB3RzRJWlkyRXRkRzl2YkhNdE9EVmlPV0kwTldNNU9TMXlZalZtT0RDQmlnWUlLZ01FQlFZSApDQUVFZm5zaVlYUjBjbk1pT25zaVlXSmhZeTVwYm1sMElqb2lkSEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzCkltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2lRV1J0YVc1QWMzVncKY0d4NVkyaGhhVzR0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBSEZYd2tGZFg2enhPK2tXSE0wMkwvNDBQMGxEaWhhcndwSUhUTGZXamFOZ0lnYVMxdzhzQzJWNldlCkZ3Q1Y3eENaRzd2RjhoMkxPeFduYVB5K29pTk5XTTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrlBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCOWpDQ0FadWdBd0lCQWdJSkFQdUI5bitJS2hYV01Bb0dDQ3FHU000OUJBTUNNRjR4Q3pBSkJnTlZCQVlUCkFrZENNUTh3RFFZRFZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0gKVDNKa1pYSmxjakViTUJrR0ExVUVBd3dTWTJFdWMzVndjR3g1WTJoaGFXNHRibVYwTUI0WERUSXhNRE13TlRBNApNekUxTWxvWERUSXpNVEl5TkRBNE16RTFNbG93WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2CmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUQKREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUVgpUWmJyZ0g5Q01Mb21yWnFKekVPaDkzSUNZMGdSZElTMWhSYTk5VUVrTlBVV2lmVXVDTnl1WFRTVFFubmxaRjBNCkFsdVY5Vlg3ZURHQ1ROUGpKOFZ2bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93UUUKQXdJQnBqQWRCZ05WSFE0RUZnUVVzdjVNcW9pc1d5RUFWTUxSazZpMThDaFBXeTh3Q2dZSUtvWkl6ajBFQXdJRApTUUF3UmdJaEFMaURYNmtBZFYzRDYvcndGUnhseFhSRE0yZHdPYXRCK1ppRnBkcFNLZVRqQWlFQW5INmZrU1FxCkZQbVlJd0V4ak5PdzNET0tYMDFNZ0VEdVlNUWx5aTBtN1MwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjcKB1dyaXRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zIjgKBkFkbWlucxIuEiQIARIgEggSBggBEgIIABoUEhIKDnN1cHBseWNoYWluTVNQEAEaBkFkbWlucyI7CgtFbmRvcnNlbWVudBIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHUmVhZGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMqBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlucxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zGsEBCgxLYWZrYUJyb2tlcnMSsAESpQEKNWthZmthLTAuYnJva2VyLnN1cHBseWNoYWluLW5ldC5zdmMuY2x1c3Rlci5sb2NhbDo5MDkyCjVrYWZrYS0xLmJyb2tlci5zdXBwbHljaGFpbi1uZXQuc3ZjLmNsdXN0ZXIubG9jYWw6OTA5Mgo1a2Fma2EtMi5icm9rZXIuc3VwcGx5Y2hhaW4tbmV0LnN2Yy5jbHVzdGVyLmxvY2FsOjkwOTIaBkFkbWlucxoiCg1Db25zZW5zdXNUeXBlEhESBwoFa2Fma2EaBkFkbWlucxoiCglCYXRjaFNpemUSFRILCAoQgICAMRiAgEAaBkFkbWlucxoeCgxCYXRjaFRpbWVvdXQSDhIECgIycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIioKD0Jsb2NrVmFsaWRhdGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMqBkFkbWlucxKPOwoLQ29uc29ydGl1bXMS/zoStDoKFVN1cHBseUNoYWluQ29uc29ydGl1bRKaOhKuHQoPbWFudWZhY3R1cmVyTVNQEpodGqIbCgNNU1ASmhsSjxsSjBsKD21hbnVmYWN0dXJlck1TUBL1BS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQVRDQ0FhZWdBd0lCQWdJSkFNZnAzK0RYSm5KUk1Bb0dDQ3FHU000OUJBTUNNR1F4Q3pBSkJnTlZCQVlUCkFrTklNUTh3RFFZRFZRUUlEQVphZFhKcFkyZ3hEekFOQmdOVkJBY01CbHAxY21samFERVZNQk1HQTFVRUNnd00KVFdGdWRXWmhZM1IxY21WeU1Sd3dHZ1lEVlFRRERCTmpZUzV0WVc1MVptRmpkSFZ5WlhJdGJtVjBNQjRYRFRJeApNRE13TlRBNE16SXdObG9YRFRJek1USXlOREE0TXpJd05sb3daREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WCkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdOb01SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnkKWlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJxcU84U25JUTFaL1VZTDRqNERJR3lUN0ZMU2VZTmJwclE3ckJtTmNvV2FNQm90Zmg2CmhiTGh3NFByLzdua2tGRDdkbldlZ1JNVDZtMTY1a1RpdXo0VG8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUE0R0ExVWREd0VCL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVbFExcGVMT2xUZlBZSFBUMnVxUXBzYlZzYnZvdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdPMHRydWMrYlU4QjFaS25XeVFBZlNJUi8rWi9lRjVkaTBnbS82OE1iCnl1a0NJUUNpNjVQbE1kRERwV0RiL2MxaUg3aTBFRFN3c29kTDZqa2dmb3VBNmtLWFBRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi5wgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREVqQ0NBcm1nQXdJQkFnSVVFci9UUTY2Rlp1bWw1THlYNkxNS1FsOUVqZ1l3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpFd016QTFNRGd6TWpBd1doY05Nakl3TXpBMU1EZ3pOekF3V2pDQmh6RUxNQWtHQTFVRQpCaE1DUTBneEdqQVlCZ05WQkFjVEVUUTNMak00THpndU5UUXZXblZ5YVdOb01SVXdFd1lEVlFRS0V3eE5ZVzUxClptRmpkSFZ5WlhJeEpEQU5CZ05WQkFzVEJtTnNhV1Z1ZERBVEJnTlZCQXNUREUxaGJuVm1ZV04wZFhKbGNqRWYKTUIwR0ExVUVBd3dXUVdSdGFXNUFiV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTVh0cEFxOE9WdzYvaHRVRXd1bEdTV2VRWitCZUwxazNRS0pPSW0wdFRiM3dXKzd3MFBtCndxM1dVWmczUEtHZnhCRlpjbi84Y2RmekFwTEZQZk5xNzJDamdnRWpNSUlCSHpBT0JnTlZIUThCQWY4RUJBTUMKQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVMENyQklIQ1RvaWpoYTkySUNuQzJqbkZQQXhNdwpId1lEVlIwakJCZ3dGb0FVbFExcGVMT2xUZlBZSFBUMnVxUXBzYlZzYnZvd0pBWURWUjBSQkIwd0c0SVpZMkV0CmRHOXZiSE10T0RWaU9XSTBOV001T1MwMU1tdDNZekNCbUFZSUtnTUVCUVlIQ0FFRWdZdDdJbUYwZEhKeklqcDcKSW1GaVlXTXVhVzVwZENJNkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QlptWnBiR2xoZEdsdgpiaUk2SWsxaGJuVm1ZV04wZFhKbGNpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFHMWhiblZtCllXTjBkWEpsY2kxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWTJ4cFpXNTBJbjE5TUFvR0NDcUdTTTQ5QkFNQ0EwY0EKTUVRQ0lDYXJBN3B3cDc3R2pnU3FCSFFBVTlLZkpkR3FWQWhJeTVUdUk5MWdaZ0RvQWlCMFdLcmdneW1SZk1uWApadHhsMjI0b0FOSkpDR05nNzZ5amhZYytDQ0xhbFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZahgwIARKABgr1BS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQVRDQ0FhZWdBd0lCQWdJSkFNZnAzK0RYSm5KUk1Bb0dDQ3FHU000OUJBTUNNR1F4Q3pBSkJnTlZCQVlUCkFrTklNUTh3RFFZRFZRUUlEQVphZFhKcFkyZ3hEekFOQmdOVkJBY01CbHAxY21samFERVZNQk1HQTFVRUNnd00KVFdGdWRXWmhZM1IxY21WeU1Sd3dHZ1lEVlFRRERCTmpZUzV0WVc1MVptRmpkSFZ5WlhJdGJtVjBNQjRYRFRJeApNRE13TlRBNE16SXdObG9YRFRJek1USXlOREE0TXpJd05sb3daREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WCkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdOb01SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnkKWlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJxcU84U25JUTFaL1VZTDRqNERJR3lUN0ZMU2VZTmJwclE3ckJtTmNvV2FNQm90Zmg2CmhiTGh3NFByLzdua2tGRDdkbldlZ1JNVDZtMTY1a1RpdXo0VG8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUE0R0ExVWREd0VCL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVbFExcGVMT2xUZlBZSFBUMnVxUXBzYlZzYnZvdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdPMHRydWMrYlU4QjFaS25XeVFBZlNJUi8rWi9lRjVkaTBnbS82OE1iCnl1a0NJUUNpNjVQbE1kRERwV0RiL2MxaUg3aTBFRFN3c29kTDZqa2dmb3VBNmtLWFBRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBmNsaWVudBr+BQr1BS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQVRDQ0FhZWdBd0lCQWdJSkFNZnAzK0RYSm5KUk1Bb0dDQ3FHU000OUJBTUNNR1F4Q3pBSkJnTlZCQVlUCkFrTklNUTh3RFFZRFZRUUlEQVphZFhKcFkyZ3hEekFOQmdOVkJBY01CbHAxY21samFERVZNQk1HQTFVRUNnd00KVFdGdWRXWmhZM1IxY21WeU1Sd3dHZ1lEVlFRRERCTmpZUzV0WVc1MVptRmpkSFZ5WlhJdGJtVjBNQjRYRFRJeApNRE13TlRBNE16SXdObG9YRFRJek1USXlOREE0TXpJd05sb3daREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WCkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdOb01SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnkKWlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJxcU84U25JUTFaL1VZTDRqNERJR3lUN0ZMU2VZTmJwclE3ckJtTmNvV2FNQm90Zmg2CmhiTGh3NFByLzdua2tGRDdkbldlZ1JNVDZtMTY1a1RpdXo0VG8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUE0R0ExVWREd0VCL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVbFExcGVMT2xUZlBZSFBUMnVxUXBzYlZzYnZvdwpDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWdPMHRydWMrYlU4QjFaS25XeVFBZlNJUi8rWi9lRjVkaTBnbS82OE1iCnl1a0NJUUNpNjVQbE1kRERwV0RiL2MxaUg3aTBFRFN3c29kTDZqa2dmb3VBNmtLWFBRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBHBlZXIaBkFkbWlucyI5CgZBZG1pbnMSLxIlCAESIRIIEgYIARICCAAaFRITCg9tYW51ZmFjdHVyZXJNU1AQARoGQWRtaW5zIjwKC0VuZG9yc2VtZW50Ei0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFudWZhY3R1cmVyTVNQGgZBZG1pbnMiOAoHUmVhZGVycxItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0dXJlck1TUBoGQWRtaW5zIjgKB1dyaXRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVyZXJNU1AaBkFkbWlucyoGQWRtaW5zEoscCgpjYXJyaWVyTVNQEvwbGpgaCgNNU1ASkBoShRoSghoKCmNhcnJpZXJNU1AS2QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjdUQ0NBWk9nQXdJQkFnSUpBS2RZK2tTNmxDOXdNQW9HQ0NxR1NNNDlCQU1DTUZveEN6QUpCZ05WQkFZVApBa2RDTVE4d0RRWURWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIClEyRnljbWxsY2pFWE1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3SGhjTk1qRXdNekExTURnek1qSXgKV2hjTk1qTXhNakkwTURnek1qSXhXakJhTVFzd0NRWURWUVFHRXdKSFFqRVBNQTBHQTFVRUNBd0dURzl1Wkc5dQpNUTh3RFFZRFZRUUhEQVpNYjI1a2IyNHhFREFPQmdOVkJBb01CME5oY25KcFpYSXhGekFWQmdOVkJBTU1EbU5oCkxtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUUvOWpHQmtLcTVWQlgKbkNKbExyUWdKZ3ZkaWl4cXdLTDZzamliSHFNV3pvSnk5aE5vQWtVbDFwUDJuTGJPQkVzRlVwbzI2cTF1aEx6SApuekFWQUVhZEo2TkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FhWXdIUVlEClZSME9CQllFRkd1ekxrS3ZBZGJ3eFlLemZzdkQrdlB4MGpnaU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRG4KTHh2TWZjcXU4SG5BSGhaWmJGbHV2VDhGSGZYb3IzQS8yZE0wWWtzc0ZRSWdMTzZMMlYyNGlRbk16bUFwWnEzZwptUDR5L3R5aW9ZM2hBeFR5S05MbWhqOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoitggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzhEQ0NBcGFnQXdJQkFnSVVPUUhwV05CZXZYa05DcnlpWWl3c0JGRE9qZ1l3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTVRBek1EVXdPRE15TURCYUZ3MHlNakF6TURVd09ETTNNREJhTUhreEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwTmhjbkpwWlhJeEh6QU5CZ05WCkJBc1RCbU5zYVdWdWREQU9CZ05WQkFzVEIwTmhjbkpwWlhJeEdqQVlCZ05WQkFNTUVVRmtiV2x1UUdOaGNuSnAKWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUUwdXVndjRYaFZSVUttU3loRkYwNwpxOGltTDJxaDZMRmVUaG5GZnZ4emNjRG92WFRXeWc2RWRNQTI0TXJOd2dqT1BzQTB2UWY2NHRhQjRHbklrMlI0CnE2T0NBUmt3Z2dFVk1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVcKQkJUOEtyNm9QMEVuUE00bFh2ZlVLTlZ0SHFpeVRqQWZCZ05WSFNNRUdEQVdnQlJyc3k1Q3J3SFc4TVdDczM3TAp3L3J6OGRJNElqQWtCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTA0TldJNVlqUTFZems1TFhJNVltUTBNSUdPCkJnZ3FBd1FGQmdjSUFRU0JnWHNpWVhSMGNuTWlPbnNpWVdKaFl5NXBibWwwSWpvaWRISjFaU0lzSW1Ga2JXbHUKSWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXVJam9pUTJGeWNtbGxjaUlzSW1obUxrVnVjbTlzYkcxbApiblJKUkNJNklrRmtiV2x1UUdOaGNuSnBaWEl0Ym1WMElpd2lhR1l1Vkhsd1pTSTZJbU5zYVdWdWRDSjlmVEFLCkJnZ3Foa2pPUFFRREFnTklBREJGQWlFQWxCb2dnM2NoczJVSDRCZ2EzcXlRb3pzd2p2L1NhZnMwTFVrTGxOdmwKd2w4Q0lIaTRSZkhKamxXT1NEQXQ2bzNMdnRoWVllREI5czJhTEZNRi9JUjNKLzVoCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NlrOCwgBEuQFCtkFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI3VENDQVpPZ0F3SUJBZ0lKQUtkWStrUzZsQzl3TUFvR0NDcUdTTTQ5QkFNQ01Gb3hDekFKQmdOVkJBWVQKQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SApRMkZ5Y21sbGNqRVhNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd0hoY05NakV3TXpBMU1EZ3pNakl4CldoY05Nak14TWpJME1EZ3pNakl4V2pCYU1Rc3dDUVlEVlFRR0V3SkhRakVQTUEwR0ExVUVDQXdHVEc5dVpHOXUKTVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9NQjBOaGNuSnBaWEl4RnpBVkJnTlZCQU1NRG1OaApMbU5oY25KcFpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFLzlqR0JrS3E1VkJYCm5DSmxMclFnSmd2ZGlpeHF3S0w2c2ppYkhxTVd6b0p5OWhOb0FrVWwxcFAybkxiT0JFc0ZVcG8yNnExdWhMekgKbnpBVkFFYWRKNk5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBYVl3SFFZRApWUjBPQkJZRUZHdXpMa0t2QWRid3hZS3pmc3ZEK3ZQeDBqZ2lNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUURuCkx4dk1mY3F1OEhuQUhoWlpiRmx1dlQ4RkhmWG9yM0EvMmRNMFlrc3NGUUlnTE82TDJWMjRpUW5Nem1BcFpxM2cKbVA0eS90eWlvWTNoQXhUeUtOTG1oajg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEgZjbGllbnQa4gUK2QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjdUQ0NBWk9nQXdJQkFnSUpBS2RZK2tTNmxDOXdNQW9HQ0NxR1NNNDlCQU1DTUZveEN6QUpCZ05WQkFZVApBa2RDTVE4d0RRWURWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIClEyRnljbWxsY2pFWE1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3SGhjTk1qRXdNekExTURnek1qSXgKV2hjTk1qTXhNakkwTURnek1qSXhXakJhTVFzd0NRWURWUVFHRXdKSFFqRVBNQTBHQTFVRUNBd0dURzl1Wkc5dQpNUTh3RFFZRFZRUUhEQVpNYjI1a2IyNHhFREFPQmdOVkJBb01CME5oY25KcFpYSXhGekFWQmdOVkJBTU1EbU5oCkxtTmhjbkpwWlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUUvOWpHQmtLcTVWQlgKbkNKbExyUWdKZ3ZkaWl4cXdLTDZzamliSHFNV3pvSnk5aE5vQWtVbDFwUDJuTGJPQkVzRlVwbzI2cTF1aEx6SApuekFWQUVhZEo2TkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FhWXdIUVlEClZSME9CQllFRkd1ekxrS3ZBZGJ3eFlLemZzdkQrdlB4MGpnaU1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lRRG4KTHh2TWZjcXU4SG5BSGhaWmJGbHV2VDhGSGZYb3IzQS8yZE0wWWtzc0ZRSWdMTzZMMlYyNGlRbk16bUFwWnEzZwptUDR5L3R5aW9ZM2hBeFR5S05MbWhqOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSBHBlZXIaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlucyI3CgtFbmRvcnNlbWVudBIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyIzCgdSZWFkZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zIjMKB1dyaXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5zEiMSCAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0YUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaTgoQT3JkZXJlckFkZHJlc3NlcxI6Eh8KHW9yZGVyZXIxLnN1cHBseWNoYWluLW5ldDo3MDUwGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxokCgxDYXBhYmlsaXRpZXMSFBIKCggKBFYyXzASABoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaDgoECgIKAAoACgAKAAoA
